#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import time
from pathlib import Path
from loguru import logger

def count_files(directory, extension):
    """–ü–æ–¥—Å—á–µ—Ç —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º"""
    if not os.path.exists(directory):
        return 0
    return len([f for f in os.listdir(directory) if f.endswith(extension)])

def monitor_progress():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    logger.info("üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    logger.info("=" * 60)
    
    # –ü–æ–¥—Å—á–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
    raw_pdfs = count_files("data/raw", ".pdf")
    processed_txts = count_files("data/processed", ".txt")
    analyzed_jsons = count_files("data/analyzed", ".json")
    
    logger.info(f"üìÑ PDF —Ñ–∞–π–ª–æ–≤ –≤ data/raw: {raw_pdfs}")
    logger.info(f"üìù TXT —Ñ–∞–π–ª–æ–≤ –≤ data/processed: {processed_txts}")
    logger.info(f"ü§ñ JSON —Ñ–∞–π–ª–æ–≤ –≤ data/analyzed: {analyzed_jsons}")
    
    if raw_pdfs > 0:
        preprocessing_progress = (processed_txts / raw_pdfs) * 100
        analysis_progress = (analyzed_jsons / raw_pdfs) * 100
        
        logger.info(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏: {preprocessing_progress:.1f}%")
        logger.info(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞ OpenAI: {analysis_progress:.1f}%")
        
        # –û—Ü–µ–Ω–∫–∞ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
        if analyzed_jsons > 0:
            remaining_docs = raw_pdfs - analyzed_jsons
            if remaining_docs > 0:
                # –ü—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: 1 –¥–æ–∫—É–º–µ–Ω—Ç –≤ –º–∏–Ω—É—Ç—É —á–µ—Ä–µ–∑ OpenAI API
                estimated_minutes = remaining_docs
                estimated_hours = estimated_minutes / 60
                
                logger.info(f"‚è±Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {remaining_docs}")
                logger.info(f"‚è±Ô∏è  –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {estimated_hours:.1f} —á–∞—Å–æ–≤")
    
    logger.info("=" * 60)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    while True:
        try:
            monitor_progress()
            print("\n" + "=" * 60)
            print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
            print("=" * 60)
            time.sleep(30)
        except KeyboardInterrupt:
            logger.info("üëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")
            break

if __name__ == "__main__":
    main() 