#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
from pathlib import Path
from loguru import logger

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞"""
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞...")
    
    env_file = Path('.env')
    
    if not env_file.exists():
        logger.error("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        logger.info("–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: copy env.example .env")
        return False
    
    logger.success(f"‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω: {env_file.absolute()}")
    
    # –ß–∏—Ç–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    try:
        with open(env_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        logger.info("üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:")
        print("-" * 50)
        
        lines = content.split('\n')
        for i, line in enumerate(lines, 1):
            line = line.strip()
            if line:
                if line.startswith('#'):
                    logger.info(f"  {i:2d}: {line}")
                elif '=' in line:
                    key, value = line.split('=', 1)
                    if 'API_KEY' in key and 'your-' in value:
                        logger.warning(f"  {i:2d}: {key}={value[:20]}... (–ù–ï –ù–ê–°–¢–†–û–ï–ù–û!)")
                    else:
                        logger.success(f"  {i:2d}: {key}={value[:20]}...")
                else:
                    logger.info(f"  {i:2d}: {line}")
        
        print("-" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        api_key = os.getenv('OPENAI_API_KEY')
        if not api_key:
            logger.error("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            logger.info("–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ .env —Ñ–∞–π–ª–∞...")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Ä—É—á–Ω—É—é
            for line in lines:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏—è
                    value = value.strip().strip('"').strip("'")
                    os.environ[key.strip()] = value
            
            api_key = os.getenv('OPENAI_API_KEY')
        
        if api_key:
            if api_key.startswith('sk-') and 'your-' not in api_key:
                logger.success(f"‚úÖ OPENAI_API_KEY –Ω–∞–π–¥–µ–Ω: {api_key[:10]}...")
                return True
            else:
                logger.error("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                logger.info("–ó–∞–º–µ–Ω–∏—Ç–µ 'sk-your-openai-api-key-here' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á")
                return False
        else:
            logger.error("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ .env")
    logger.info("=" * 50)
    
    success = check_env_file()
    
    logger.info("=" * 50)
    if success:
        logger.success("üéâ .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    else:
        logger.error("üí• –ü—Ä–æ–±–ª–µ–º—ã —Å .env —Ñ–∞–π–ª–æ–º. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ.")
        return 1
    
    return 0

if __name__ == '__main__':
    exit(main()) 