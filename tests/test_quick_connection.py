#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def test_api_connection():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API"""
    print("üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö API")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_file = os.path.join(".env")
    if os.path.exists(env_file):
        with open(env_file, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ[key] = value
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
    gemini_key = os.getenv('GEMINI_API_KEY')
    openai_key = os.getenv('OPENAI_API_KEY')
    
    print(f"GEMINI_API_KEY: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if gemini_key and gemini_key != 'your_gemini_api_key_here' else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"OPENAI_API_KEY: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if openai_key and openai_key != 'your_openai_api_key_here' else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Gemini
    if gemini_key and gemini_key != 'your_gemini_api_key_here':
        print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Gemini...")
        try:
            from hybrid_processor import create_hybrid_processor
            processor = create_hybrid_processor(provider="gemini")
            response = processor.process_with_external_llm(
                local_response="–¢–µ—Å—Ç.",
                original_query="–¢–µ—Å—Ç",
                mode="polish"
            )
            print("‚úÖ Gemini —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        except Exception as e:
            print(f"‚ùå Gemini –æ—à–∏–±–∫–∞: {e}")
    else:
        print("\n‚è≠Ô∏è Gemini –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ—Ç API –∫–ª—é—á–∞)")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º OpenAI
    if openai_key and openai_key != 'your_openai_api_key_here':
        print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenAI...")
        try:
            from hybrid_processor import create_hybrid_processor
            processor = create_hybrid_processor(provider="openai")
            response = processor.process_with_external_llm(
                local_response="–¢–µ—Å—Ç.",
                original_query="–¢–µ—Å—Ç",
                mode="polish"
            )
            print("‚úÖ OpenAI —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        except Exception as e:
            print(f"‚ùå OpenAI –æ—à–∏–±–∫–∞: {e}")
    else:
        print("\n‚è≠Ô∏è OpenAI –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ—Ç API –∫–ª—é—á–∞)")
    
    print("\nüèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    test_api_connection()
